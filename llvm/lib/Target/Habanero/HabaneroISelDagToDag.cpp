#include "llvm/CodeGen/MachineFrameInfo.h"
#include "llvm/CodeGen/MachineFunction.h"
#include "llvm/CodeGen/MachineInstrBuilder.h"
#include "llvm/CodeGen/MachineRegisterInfo.h"
#include "llvm/CodeGen/SelectionDAG.h"
#include "llvm/CodeGen/SelectionDAGISel.h"
#include "llvm/CodeGen/TargetLowering.h"
#include "llvm/IR/CallingConv.h"
#include "llvm/IR/Constants.h"
#include "llvm/IR/DerivedTypes.h"
#include "llvm/IR/Function.h"
#include "llvm/IR/Intrinsics.h"
#include "llvm/IR/LLVMContext.h"
#include "llvm/Support/Compiler.h"
#include "llvm/Support/Debug.h"
#include "llvm/Support/ErrorHandling.h"
#include "llvm/Support/raw_ostream.h"

#include "Habanero.h"
#include "HabaneroSubtarget.h"
#include "HabaneroISelLowering.h"
#include "HabaneroTargetMachine.h"
#include "MCTargetDesc/HabaneroMCTargetDesc.h"

using namespace llvm;

#define DEBUG_TYPE "habanero-isel"

namespace {

class HabaneroDAGToDAGISel : public SelectionDAGISel {
  const HabaneroSubtarget *Subtarget = nullptr;

public:
  static char ID;
  explicit HabaneroDAGToDAGISel(HabaneroTargetMachine &tm) : SelectionDAGISel(ID, tm) {}

  bool runOnMachineFunction(MachineFunction &MF) override {
    Subtarget = &MF.getSubtarget<HabaneroSubtarget>();
    return SelectionDAGISel::runOnMachineFunction(MF);
  }

  void Select(SDNode *N) override;

  StringRef getPassName() const override {
    return "Habanero DAG->DAG Pattern Instruction Selection";
  }

// Include the pieces autogenerated from the target description.
#include "HabaneroGenDAGISel.inc"
};

} // end anonymous namespace

char HabaneroDAGToDAGISel::ID = 0;

/// This pass converts a legalized DAG into a Habanero-specific DAG, ready for
/// instruction scheduling.
FunctionPass *llvm::createHabaneroISelDag(HabaneroTargetMachine &TM) {
  return new HabaneroDAGToDAGISel(TM);
}

void HabaneroDAGToDAGISel::Select(SDNode *Node) {
  // Already selected -> maybe error!
  if (Node->isMachineOpcode()) {
    LLVM_DEBUG(dbgs() << "WARNING post-isel opcode on isel pass: ";
               Node->dump(CurDAG); dbgs() << "\n");
    Node->setNodeId(-1);
    return;
  }

  // Do isel
  SDLoc DL(Node);
  SelectCode(Node);
}
